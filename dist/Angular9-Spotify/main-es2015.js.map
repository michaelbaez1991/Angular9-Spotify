{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Crud/add/add.component.ts","./src/app/Crud/add/add.component.html","./src/app/Crud/read/read.component.ts","./src/app/Crud/read/read.component.html","./src/app/Crud/update/update.component.ts","./src/app/Crud/update/update.component.html","./src/app/Modelo/Users.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/artista/artista.component.ts","./src/app/artista/artista.component.html","./src/app/backend-java/backend-java.component.ts","./src/app/backend-java/backend-java.component.html","./src/app/pipes/domseguro.pipe.ts","./src/app/pipes/noimage.pipe.ts","./src/app/releases/releases.component.ts","./src/app/releases/releases.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/services/crud-java.service.ts","./src/app/services/spotify.service.ts","./src/app/shared/cards/cards.component.ts","./src/app/shared/cards/cards.component.html","./src/app/shared/loading/loading.component.ts","./src/app/shared/loading/loading.component.html","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CrudJavaService } from 'src/app/services/crud-java.service';\nimport { Users } from 'src/app/Modelo/Users';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n  usu: Users = new Users();\n\n  constructor(private router: Router, private serviceCrud: CrudJavaService) { }\n\n  ngOnInit(): void {\n  }\n\n  guardar() {\n    this.serviceCrud.postUsers(this.usu)\n    .subscribe(\n      data => {\n        // console.log(data);\n        alert('Se agrego con exito!!');\n        this.router.navigate(['BackendJava/listar']);\n      }\n    );\n  }\n}\n","<div class=\"container col-md-6\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h3 style=\"color:black;\">Agregar Usuarios</h3>\n        </div>\n        <div class=\"card-body\" >\n            <form action=\"\">\n                <div class=\"form-group\">\n                    <label for=\"\" style=\"color:black;\">Nombre: </label>\n                    <input [(ngModel)]=\"usu.nombre\" name=\"nombre\" type=\"text\" class=\"form-control\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"\" style=\"color:black;\">Apellido: </label>\n                    <input [(ngModel)]=\"usu.apellido\" name=\"apellido\" type=\"text\" class=\"form-control\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"\" style=\"color:black;\">Email: </label>\n                    <input [(ngModel)]=\"usu.email\" name=\"email\" type=\"text\" class=\"form-control\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"\" style=\"color:black;\">Profesión: </label>\n                    <input [(ngModel)]=\"usu.profesion\" name=\"profesion\" type=\"text\" class=\"form-control\">\n                </div>\n                <button (click)=\"guardar()\" class=\"btn btn-danger\">Guardar</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CrudJavaService } from 'src/app/services/crud-java.service';\nimport { Users } from 'src/app/Modelo/Users';\n\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})\nexport class ReadComponent implements OnInit {\n  users: Users[];\n  constructor(private serviceCrud: CrudJavaService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.serviceCrud.getUsers()\n    .subscribe(\n      data => {\n        // console.log(data);\n        this.users = data;\n      }\n    );\n  }\n\n  editar(user: Users): void {\n    localStorage.setItem('id', user.id.toString());\n    this.router.navigate(['BackendJava/editar']);\n  }\n\n  eliminar(user: Users) {\n    this.serviceCrud.deleteUsers(user)\n    .subscribe(\n      data => {\n        // console.log(data);\n        this.users = this.users.filter(p => p !== user);\n        alert('Usuario eliminado');\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h3 style=\"color:black;\">Usuarios</h3>\n        </div>\n        <div class=\"card-body\" >\n            <table class=\"table table-hover\">\n                <thead style=\"text-align: center;\">\n                    <tr>\n                        <th style=\"color:black;\">ID</th>\n                        <th style=\"color:black;\">APELLIDO</th>\n                        <th style=\"color:black;\">CORREO</th>\n                        <th style=\"color:black;\">NOMBRE</th>\n                        <th style=\"color:black;\">PROFESION</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr class=\"text-center\" *ngFor=\"let user of users\">\n                        <td style=\"color:black;\">{{ user.id }}</td>\n                        <td style=\"color:black;\">{{ user.apellido }}</td>\n                        <td style=\"color:black;\">{{ user.email }}</td>\n                        <td style=\"color:black;\">{{ user.nombre }}</td>\n                        <td style=\"color:black;\">{{ user.profesion }}</td>\n                        <td>\n                            <a (click)=\"editar(user)\" class=\"btn btn-warning\" role=\"button\">Editar</a>\n                            <a (click)=\"eliminar(user)\" style=\"margin-left: 10px;\" class=\"btn btn-danger\" role=\"button\">Eliminar</a>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CrudJavaService } from 'src/app/services/crud-java.service';\nimport { Users } from 'src/app/Modelo/Users';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n  user: Users = new Users();\n  constructor(private router: Router, private service: CrudJavaService) { }\n\n  ngOnInit(): void {\n    this.editar();\n  }\n\n  editar() {\n    const id = localStorage.getItem('id');\n    this.service.getUsersId(+ id)\n    .subscribe(\n      data => {\n        // console.log(data);\n        this.user = data;\n      }\n    );\n  }\n\n  actualizar(user: Users) {\n    this.service.updateUsers(user)\n    .subscribe(\n      data => {\n        console.log(data);\n        this.user = data;\n        alert('Usuario actualizado correctamente');\n        this.router.navigate(['BackendJava/listar']);\n      }\n    );\n  }\n\n}\n","<div class=\"container col-md-6\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h3 style=\"color:black;\">Modificar Usuarios</h3>\n        </div>\n        <div class=\"card-body\" >\n            <form action=\"\">\n                <div class=\"form-group\">\n                    <label for=\"\" style=\"color:black;\">Nombre: </label>\n                    <input [(ngModel)]=\"user.nombre\" name=\"nombre\" type=\"text\" class=\"form-control\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"\" style=\"color:black;\">Apellido: </label>\n                    <input [(ngModel)]=\"user.apellido\" name=\"apellido\" type=\"text\" class=\"form-control\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"\" style=\"color:black;\">Email: </label>\n                    <input [(ngModel)]=\"user.email\" name=\"email\" type=\"text\" class=\"form-control\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"\" style=\"color:black;\">Profesión: </label>\n                    <input [(ngModel)]=\"user.profesion\" name=\"profesion\" type=\"text\" class=\"form-control\">\n                </div>\n                <button (click)=\"actualizar(user)\" class=\"btn btn-danger\">Actualizar</button>\n            </form>\n        </div>\n    </div>\n</div>","export class Users {\r\n    id: number;\r\n    apellido: `String`;\r\n    email: `String`;\r\n    nombre: `String`;\r\n    profesion: `String`;\r\n}\r\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'Angular9-Spotify';\n  newReleases: any[] = [];\n  isLoading: boolean;\n\n  constructor(private router: Router) { }\n  // ngOnInit(): void {\n  // }\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\" style=\"padding-top: 15px\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ReleasesComponent } from './releases/releases.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CardsComponent } from './shared/cards/cards.component';\nimport { LoadingComponent } from './shared/loading/loading.component';\nimport { NoimagePipe } from './pipes/noimage.pipe';\nimport { DomSeguroPipe } from './pipes/domseguro.pipe';\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { ArtistaComponent } from './artista/artista.component';\nimport { BackendJavaComponent } from './backend-java/backend-java.component';\nimport { ReadComponent } from './Crud/read/read.component';\nimport { AddComponent } from './Crud/add/add.component';\nimport { UpdateComponent } from './Crud/update/update.component';\nimport { FormsModule } from '@angular/forms';\nimport { CrudJavaService } from '../app/services/crud-java.service';\nimport { SearchComponent } from './search/search.component';\n\nexport const ROUTES: Routes = [\n  { path: 'lanzamientos', component: ReleasesComponent, children: [\n    {\n      path: 'lanzamientos',\n      component: ReleasesComponent\n    }\n  ]},\n  { path: '', pathMatch: 'full', redirectTo: 'lanzamientos' },\n  { path: 'artist/:id', component: ArtistaComponent },\n  { path: 'BackendJava', component: BackendJavaComponent, children: [\n      { path: 'listar', component: ReadComponent },\n      { path: 'agregar', component: AddComponent },\n      { path: 'editar', component: UpdateComponent },\n      { path: 'buscar', component: SearchComponent },\n    ]\n  },\n  { path: 'BackendJava/listar', component: ReadComponent },\n  { path: 'BackendJava/agregar', component: AddComponent },\n  { path: 'BackendJava/editar', component: UpdateComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReleasesComponent,\n    CardsComponent,\n    LoadingComponent,\n    NoimagePipe,\n    DomSeguroPipe,\n    NavbarComponent,\n    ArtistaComponent,\n    BackendJavaComponent,\n    ReadComponent,\n    AddComponent,\n    UpdateComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(ROUTES, { useHash: true })\n  ],\n  providers: [CrudJavaService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SpotifyService } from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artista',\n  templateUrl: './artista.component.html',\n  // styleUrls: ['./artista.component.css']\n})\n\nexport class ArtistaComponent implements OnInit {\n  artist: any;\n  isLoading: boolean;\n  topTracks: any[] = [];\n\n  public token = {\n    accessToken: '',\n    typeToken: ''\n  };\n\n  constructor(private actRouter: ActivatedRoute, private spotify: SpotifyService) {\n    this.isLoading = true;\n\n    this.spotify.getToken()\n    .subscribe(\n      (data: any) =>  {\n        // console.log(data);\n        this.token.accessToken = data.access_token;\n        this.token.typeToken = data.token_type;\n      }\n    );\n\n    setTimeout(() => {\n      this.actRouter.params.subscribe(params => {\n        this.getArtist(params.id);\n        this.getTopTracks(params.id);\n      });\n    }, 1500);\n  }\n\n  private getArtist(id: string) {\n    this.spotify.getArtist(id, this.token.typeToken, this.token.accessToken).subscribe(artist => {\n      this.artist = artist;\n      this.isLoading = false;\n    });\n  }\n\n  private getTopTracks(idArtist: string) {\n    this.spotify.getTopTracks(idArtist, this.token.typeToken, this.token.accessToken)\n      .subscribe(topTracks => {\n        this.topTracks = topTracks;\n      });\n  }\n\n  ngOnInit(): void {\n    // throw new Error('Method not implemented.');\n  }\n}\n","<app-loading *ngIf=\"isLoading\"></app-loading>\n\n<div class=\"row animated fadeIn\" *ngIf=\"!isLoading\">\n    <div class=\"col-2\">\n        <img [src]=\"artist.images | noimage\" class=\"img-thumbnail img-circle\">\n    </div>\n\n    <div class=\"col\">\n        <h3>{{ artist.name }}</h3>\n        <p>\n          <a [href]=\"artist.external_urls.spotify\" target=\"_blank\">\n          Ir a la pagina del artista\n          </a>\n        </p>\n    </div>\n\n    <div class=\"col-4 text-right\">\n      <button routerLink=\"/lanzamientos\" class=\"btn btn-outline-danger\">\n        Atrás\n      </button>\n    </div>\n</div>\n\n<div class=\"row m-5\">\n    <div class=\"col\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th>Foto</th>\n                    <th>Albúm</th>\n                    <th>Canción</th>\n                    <th>Avances</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let track of topTracks\">\n                    <td>\n                        <img [src]=\"track.album.images | noimage\" class=\"img-thumb\">\n                    </td>\n                    <td>{{ track.album.name }}</td>\n                    <td>{{ track.name }}</td>\n                    <td>\n                        <iframe [src]=\"track.uri | domseguro\" width=\"300\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-backend-java',\n  templateUrl: './backend-java.component.html',\n  styleUrls: ['./backend-java.component.css']\n})\nexport class BackendJavaComponent implements OnInit {\n\n  constructor(private router: Router) { }\n  Listar() {\n    this.router.navigate(['listar']);\n  }\n\n  Agregar() {\n    this.router.navigate(['agregar']);\n  }\n\n  Editar() {\n    this.router.navigate(['editar']);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"text-align:center\">\n    <h1>\n        2 Parte (Backend Java)\n    </h1>\n    <img src=\"\" alt=\"\" width=\"130\">\n</div>\n\n<div class=\"container\">\n    <a class=\"btn btn-info\" role=\"button\" routerLink=\"agregar\">Nuevo</a>   \n    <a class=\"btn btn-info\" role=\"button\" routerLink=\"listar\" style=\"margin-left: 10px;\">Listar todos los usuarios</a>\n    <a class=\"btn btn-info\" role=\"button\" routerLink=\"buscar\" style=\"margin-left: 10px;\">Buscar un usuario</a>\n</div>\n\n<hr>\n<router-outlet></router-outlet>","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'domseguro'\n})\n\nexport class DomSeguroPipe implements PipeTransform {\n\n  constructor(private domSanitizer: DomSanitizer) { }\n\n  transform(value: string): any {\n    const url = 'https://open.spotify.com/embed?uri=';\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(url + value);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'noimage'\n})\nexport class NoimagePipe implements PipeTransform {\n  transform(images: any[]): string {\n    if (!images) {\n      return 'assets/img/noimage.png';\n    }\n\n    if (images.length > 0) {\n      return images[0].url;\n    } else {\n      return 'assets/img/noimage.png';\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from '../services/spotify.service';\nimport { AppComponent } from '../app.component';\n\n@Component({\n  selector: 'app-releases',\n  templateUrl: './releases.component.html',\n  styleUrls: ['./releases.component.css']\n})\nexport class ReleasesComponent implements OnInit {\n  newReleases: any[] = [];\n  isLoading: boolean;\n\n  public token = {\n    accessToken: '',\n    typeToken: ''\n  };\n\n  constructor(private spotifyService: SpotifyService) {\n    this.isLoading = true;\n\n    this.spotifyService.getToken()\n    .subscribe(\n      (data: any) =>  {\n        // console.log(data);\n        this.token.accessToken = data.access_token;\n        this.token.typeToken = data.token_type;\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.spotifyService.getNewReleases(this.token.typeToken, this.token.accessToken)\n      .subscribe((data: any) => {\n        // console.log(data);\n        this.newReleases = data;\n        this.isLoading = false;\n      });\n    }, 1000);\n  }\n}\n","<app-loading *ngIf=\"isLoading\"></app-loading>\n<app-cards [items]=\"newReleases\"></app-cards>","import { Component, OnInit } from '@angular/core';\nimport { CrudJavaService } from '../services/crud-java.service';\nimport { Router } from '@angular/router';\nimport { Users } from '../Modelo/Users';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  user: Users = new Users();\n  constructor(private serviceCrud: CrudJavaService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  editar(user: Users): void {\n    localStorage.setItem('id', user.id.toString());\n    this.router.navigate(['BackendJava/editar']);\n  }\n\n}\n","<div class=\"container col-md-6\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h3 style=\"color:black;\">Buscar usuario por ID</h3>\n        </div>\n        <div class=\"card-body\" >\n            <form action=\"\">\n                <div class=\"form-group\">\n                    <label for=\"\" style=\"color:black;\">Ingrese el id: </label>\n                    <input [(ngModel)]=\"user.id\" name=\"id\" type=\"text\" class=\"form-control\">\n                </div>\n\n                <button (click)=\"editar(user)\" class=\"btn btn-danger\">Buscar</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Users } from '../Modelo/Users';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudJavaService {\n  constructor(private http: HttpClient) {  }\n\n  url = 'http://localhost:8080/backend/globalTech';\n\n  getUsers() {\n    return this.http.get<Users[]>(this.url);\n  }\n\n  postUsers(user: Users) {\n    return this.http.post<Users[]>(this.url, user);\n  }\n\n  getUsersId(id: number) {\n    return this.http.get<Users>(this.url + '/' + id);\n  }\n\n  updateUsers(user: Users) {\n    return this.http.put<Users>(this.url + '/' + user.id, user);\n  }\n\n  deleteUsers(user: Users){\n    return this.http.delete<Users>(this.url  + '/' + user.id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,  HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SpotifyService {\n\n  public credentials = {\n    clientId: 'f031f6937e914cba9c34c22c90f7bafa',\n    clientSecret: 'ce2d20ed3a3048e58c3359442742d704',\n    accessToken: '',\n    typeToken: ''\n  };\n\n  public Base64credentials = {\n    segurity: btoa(this.credentials.clientId + ':' + this.credentials.clientSecret)\n  };\n\n  public httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: 'Basic ' + this.Base64credentials.segurity,\n    })\n  };\n\n  constructor(private http: HttpClient) {  }\n\n  getToken() {\n    const urlToken = 'https://accounts.spotify.com/api/token';\n    const bodyToken = new HttpParams().set('grant_type', 'client_credentials');\n\n    return this.http.post(urlToken, bodyToken, this.httpOptions);\n  }\n\n  getQuery(query: string, typeToken: string, accessToken: string) {\n    const url = `https://api.spotify.com/v1/${query}`;\n    const headers = new HttpHeaders({\n      Authorization:\n      typeToken + ' ' + accessToken\n    });\n\n    return this.http.get(url, { headers });\n  }\n\n  getNewReleases(typeToken: string, accessToken: string) {\n    return this.getQuery('browse/new-releases?country=co&limit=20', typeToken, accessToken).pipe(\n      map((data: any) => data.albums.items)\n    );\n  }\n\n  getArtists(term: string, typeToken: string, accessToken: string) {\n    return this.getQuery(`search?q=${term}&type=artist&limit=15`, typeToken, accessToken).pipe(\n      map((data: any) => data.artists.items)\n    );\n  }\n\n  getArtist(id: string, typeToken: string, accessToken: string) {\n    return this.getQuery(`artists/${id}`, typeToken, accessToken);\n  }\n\n  getTopTracks(idArtist: string, typeToken: string, accessToken: string) {\n    return this.getQuery(`artists/${idArtist}/top-tracks?country=us`, typeToken, accessToken)\n      .pipe(map((data: any) => data.tracks));\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cards',\n  templateUrl: './cards.component.html',\n  // styleUrls: ['./cards.component.css']\n})\n\nexport class CardsComponent implements OnInit {\n  @Input() items: any[] = [];\n\n  constructor(private router: Router) { }\n\n  ngOnInit() { }\n\n  showArtist(item: any) {\n    const artistId = item.id;\n    this.router.navigate(['/artist', artistId]);\n  }\n\n  showItem(item: any) {\n    if (item.type === 'artist') {\n      this.router.navigate(['/artist', item.id]);\n    }\n  }\n}\n","<div class=\"card-columns m-4 animated fadeIn\">\n    <div *ngFor=\"let item of items\" class=\"card\">\n        <img (click)=\"showItem(item)\" [src]=\"item.images | noimage\" class=\"card-img-top puntero\" alt=\"Card Image Top\" />\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ item.name }}</h5>\n            <p class=\"card-text\">\n                <span (click)=\"showArtist(artist)\" *ngFor=\"let artist of item.artists\" class=\"badge badge-pill badge-primary puntero\">{{ artist.name }}</span>\n            </p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  // styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row text-center animated fadeIn\">\n    <div class=\"col\">\n        <i class=\"fa fa-sync fa-spin fa-5x\"></i>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  // styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src=\"assets/img/banner-ico.png\" width=\"30\" height=\"30\" alt=\"\" />\n      Spotify Integration\n    </a>\n    \n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"lanzamientos\">Lanzamientos</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"BackendJava\">BackendJava</a>\n        </li>\n      </ul>\n    </div>\n</nav>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}